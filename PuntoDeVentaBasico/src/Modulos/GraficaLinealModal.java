/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Modulos;

import java.awt.BasicStroke;
import java.awt.Color;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Abina
 */
public class GraficaLinealModal extends javax.swing.JDialog {

    /**
     * Creates new form GraficaLinealModal
     */
    ChartPanel panel ;
    public GraficaLinealModal(JFrame THIS,List<Integer[]> puntos,String titulo, String filas, String columnas){
        super(THIS,true);
        initComponents();
        
        setSize(800, 600);
        cargar(puntos, titulo, filas, columnas);
        setLocationRelativeTo(THIS);
    }
    public  void cargar(List<Integer[]> puntos,String titulo, String filas, String columnas) {

        //Informacion

        XYSeries nodos = new XYSeries("Dinero");
        int n=59,i=1;


        for(Integer p[]:puntos){
            nodos.add(p[0],p[1]);

        }
        XYSeriesCollection dataset = new XYSeriesCollection();

        dataset.addSeries(nodos);

        JFreeChart xylineChart = ChartFactory.createXYLineChart(
                        titulo,
                        columnas,
                        filas,
                        dataset,
                        PlotOrientation.VERTICAL, false, false, false);

       xylineChart.setBackgroundPaint(Color.WHITE);
       xylineChart.setBorderPaint(Color.WHITE);
       XYPlot plot = xylineChart.getXYPlot();
        plot.setOutlinePaint(Color.WHITE);
       plot.setBackgroundPaint(Color.WHITE);
     //  plot.setRangeTickBandPaint(Color.BLUE);
       plot.setRangeGridlinePaint(Color.gray);
       plot.setDomainGridlinePaint(Color.gray);
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();

        renderer.setSeriesPaint(0, Color.decode("#00253f"));
        renderer.setSeriesPaint(1, Color.CYAN);
        renderer.setSeriesPaint(2, Color.YELLOW);
        renderer.setSeriesStroke(0, new BasicStroke(2.0f));
        renderer.setSeriesStroke(1, new BasicStroke(3.0f));
        renderer.setSeriesStroke(2, new BasicStroke(2.0f));
        //quita la linea
        //renderer.setSeriesLinesVisible(0, false);

        //quita el nodo
        renderer.setSeriesShapesVisible(0, false);
        plot.setRenderer(renderer);

        panel = new ChartPanel(xylineChart);

        // Creamos la ventana
        panel.setSize(this.getSize().width, this.getSize().height-40);

        this.add(panel);

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 183, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
